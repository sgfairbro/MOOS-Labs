ProcessConfig = pAcommsHandler
{
    // unique identifier for this node (like a MAC address)
    modem_id: $(MODEM_ID)

    common
    {
        verbosity: DEBUG2
        show_gui: true
        app_tick: 10
        comm_tick: 10 
        log: false
    }
    
    load_shared_library: "../../lib/liblab12messages.$(LD_EXTENSION)"
    load_shared_library: "../../lib/liblab12codecs.$(LD_EXTENSION)"

    queue_cfg { 
        message_entry {  
            protobuf_name: "MiniCommand"
            ack: false # no ack for mini packets
            role { type: DESTINATION_ID field: "destination" }
        }
    }

    translator_entry 
    { 
        protobuf_name: "MiniCommand"

        trigger
        {  type: TRIGGER_PUBLISH  moos_var: "MINI_COMMAND_OUT" }
        create 
        { 
            technique: TECHNIQUE_PROTOBUF_TEXT_FORMAT 
            moos_var: "MINI_COMMAND_OUT"
        }
        publish 
        {
            technique: TECHNIQUE_PROTOBUF_TEXT_FORMAT  
            moos_var: "MINI_COMMAND_IN"
        }
        publish 
        {
            technique: TECHNIQUE_FORMAT  
            moos_var: "%2%"
            format: "true"
        }
        publish 
        {
            technique: TECHNIQUE_FORMAT  
            moos_var: "MOOS_MANUAL_OVERRIDE"
            format: "%3%"
        }
        publish 
        {
            technique: TECHNIQUE_FORMAT  
            moos_var: "NEWPTS"
            format: "speed=%4%"
        }
    }
    
    driver_type: DRIVER_WHOI_MICROMODEM
    driver_cfg 
    {
        serial_port: "$(MICROMODEM_PORT)"
    }

    mac_cfg
    {
        type: MAC_FIXED_DECENTRALIZED
        slot {
            type: DRIVER_SPECIFIC
            [micromodem.protobuf.type]: MICROMODEM_MINI_DATA
            src: 1
            slot_seconds: 5 
        } 
    }

    multiplex_create_moos_var: "LIAISON_COMMANDER_OUT"
}
